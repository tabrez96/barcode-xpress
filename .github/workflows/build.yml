name: Build
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-apple-darwin, x86_64-apple-darwin]

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Cross-compilation for Intel
        if: matrix.target == 'x86_64-apple-darwin'
        run: |
          rustup component add rust-src --target x86_64-apple-darwin
          echo "CARGO_BUILD_TARGET=x86_64-apple-darwin" >> $GITHUB_ENV

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --target ${{ matrix.target }} --config tauri/tauri.conf.json

      - name: List build outputs
        run: |
          echo "Listing build outputs:"
          find tauri/target -name "*.dmg" -o -name "*.app" | sort

      - name: Create distributable zip for macOS
        run: |
          cd tauri/target/${{ matrix.target }}/release/bundle/macos
          zip -r "BarcodeXpress-${{ matrix.target }}.zip" "Barcode Xpress.app"
          echo "Created zip archive for distribution"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: barcode-xpress-${{ matrix.target }}
          path: |
            tauri/target/*/release/bundle/dmg/*.dmg
            tauri/target/*/release/bundle/macos/*.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Create icons directory and basic icon file
        run: |
          New-Item -ItemType Directory -Force -Path tauri\icons
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/tauri-apps/tauri/dev/core/tauri-runtime/icons/icon.ico" -OutFile "tauri\icons\icon.ico"
          Copy-Item "tauri\icons\icon.ico" -Destination "tauri\icons\32x32.png"
          Copy-Item "tauri\icons\icon.ico" -Destination "tauri\icons\128x128.png"

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --target x86_64-pc-windows-msvc --config tauri/tauri.conf.json

      - name: List build outputs
        run: |
          echo "Listing build outputs:"
          Get-ChildItem -Path tauri\target -Recurse -Include *.msi, *.exe | ForEach-Object { $_.FullName }

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: barcode-xpress-windows
          path: |
            tauri/target/*/release/bundle/msi/*.msi
            tauri/target/*/release/bundle/nsis/*.exe
